{

  "UdapClientOptions": {
    "Headers": {
      "USER_KEY": "hobojoe",
      "ORG_KEY": "travelOrg"
    }
  },


  "UdapFileCertStoreManifest": {
    "Communities": [
      {
        "Name": "udap://fhirlabs1/",
        "Intermediates": [
          "CertStore/intermediates/intermediateLocalhostCert.cer"
        ],
        "Anchors": [
          {
            "FilePath": "CertStore/anchors/caLocalhostCert.cer"
          }
        ]
      },
      {
        "Name": "udap://Provider2",
        "Intermediates": [
          "CertStore/intermediates/intermediateLocalhostCert2.cer"
        ],
        "Anchors": [
          {
            "FilePath": "CertStore/anchors/caLocalhostCert2.cer"
          }
        ]
      },
      {
        "Name": "udap://Untrusted/",
        "Intermediates": [
          "CertStore/intermediates/intermediateWeatherApiLocalhostCert.cer"
        ],
        "Anchors": [
          {
            "FilePath": "CertStore/anchors/caWeatherApiLocalhostCert.cer"
          }
        ]
      },
      {
        "Name": "udap://IssMismatchToSubjAltName/",
        "Intermediates": [
          "CertStore/intermediates/intermediateLocalhostCert4.cer"
        ],
        "Anchors": [
          {
            "FilePath": "CertStore/anchors/caLocalhostCert4.cer"
          }
        ]
      },
      {
        "Name": "udap://ECDSA/",
        "Intermediates": [
          "CertStore/intermediates/intermediateLocalhostCert6.cer"
        ],
        "Anchors": [
          {
            "FilePath": "CertStore/anchors/caLocalhostCert6.cer"
          }
        ]
      }
    ]
  },


  "SmartMetadata": {
    "issuer": "https://host.docker.internal:5002",
    "jwks_uri": "https://host.docker.internal:5002/.well-known/openid-configuration/jwks",
    "authorization_endpoint": "https://host.docker.internal:5002/connect/authorize",
    "token_endpoint": "https://host.docker.internal:5002/connect/token",
    "token_endpoint_auth_methods_supported": [
      "udap_pki_jwt", // inform Smart there is a support for UDAP
      "client_secret_basic",
      "private_key_jwt"
    ],
    "grant_types_supported": [
      "authorization_code",
      "client_credentials",
      "refresh_token"
    ],
    // Should be required when token_endpoint_auth_methods_supported contains udap_pki_jwt
    "registration_endpoint": "https://host.docker.internal:5002/connect/register",
    "scopes_supported": [ "openid", "profile", "launch", "launch/patient", "patient/*.rs", "user/*.rs", "offline_access" ],
    "response_types_supported": [ "code" ],
    "management_endpoint": "https://localhost:7074/user/manage", //todo in auth server or EHR?
    "introspection_endpoint": "https://host.docker.internal:5002/connect/introspect",
    "revocation_endpoint": "https://host.docker.internal:5002/connect/revoke",
    "code_challenge_methods_supported": [ "S256" ],
    "capabilities": [
      "launch-ehr",
      "permission-patient",
      "permission-v2",
      "client-public",
      "client-confidential-symmetric",
      "context-ehr-patient",
      "sso-openid-connect"
    ]
  }

}
