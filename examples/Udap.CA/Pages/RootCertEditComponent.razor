@page "/RootCerts"
@using System.Security.Cryptography.X509Certificates

@inject ISnackbar Snackbar

<ErrorBoundary @ref="ErrorBoundary">
  <ChildContent>
      <MudTable Items="@_rootCertificates" Dense="@false" Hover="@true" ReadOnly="@false" CanCancelEdit="@true"
                SortLabel="Sort By" CommitEditTooltip="Generate Root CA"
                OnCommitEditClick="@(() => Snackbar.Add("Commit Generate Root CA Handler Invoked"))"
                RowEditPreview="BackupItem"
                RowEditCancel="ResetItemToOriginalValues"
                RowEditCommit="ItemHasBeenCommitted"
                IsEditRowSwitchingBlocked="@true"
                ApplyButtonPosition="@TableApplyButtonPosition.Start">
          <ToolBarContent>
              <MudText Typo="Typo.h6">Root Certificates</MudText>
              <MudSpacer />

              <MudFab Icon="@Icons.Material.Filled.GeneratingTokens"
                      Color="Color.Inherit"
                      @onclick="AddRootCertificate"
                      Label="Create"
                disabled="@_rootFormActive" />
          </ToolBarContent>
          <ColGroup>
              <col style="width:0" />
              <col />
              <col />
              <col />
              <col />
          </ColGroup>
          <HeaderContent>
              <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<RootCertificate, object>(x=>x.Name)">Subject</MudTableSortLabel></MudTh>
              <MudTh><MudTableSortLabel SortBy="new Func<ViewModel.RootCertificate, object>(x=> x.Enabled)">Enabled</MudTableSortLabel></MudTh>
              <MudTh><MudTableSortLabel SortBy="new Func<ViewModel.RootCertificate, object>(x=> x.Certificate?.Thumbprint ?? string.Empty)">Thumbprint</MudTableSortLabel></MudTh>
              <MudTh><MudTableSortLabel SortBy="new Func<ViewModel.RootCertificate, object>(x=> x.Certificate?.GetNameInfo(X509NameType.SimpleName, false) ?? string.Empty)">Certificate Name</MudTableSortLabel></MudTh>
              <MudTh />
          </HeaderContent>
          <RowTemplate>
              @if (context.Id == 0)
              {
                  <MudTd DataLabel="Subject" id="@($"RootCertificateId:{context.Id}")"><InputText placeholder="OU=rootca,O=Fhir Coding, L=Portland, S=Oregon, C=US" @bind-Value="@context.Name">@context.Name</InputText></MudTd>
              }
              else
              {
                  <MudTd DataLabel="Subject">@context.Name</MudTd>
              }
                <MudTd DataLabel="Enabled"><MudSwitch @bind-Value="@context.Enabled" Color="Color.Primary" /></MudTd>
              <MudTd DataLabel="Certificate">@context.Certificate?.GetNameInfo(X509NameType.SimpleName, false) </MudTd>
              <MudTd DataLabel="Certificate">@context.Thumbprint </MudTd>
              <MudTd @onclick:stopPropagation="true" Style="">
                  @if (context.Id != 0)
                  {
                      <MudFab HtmlTag="label"
                              Size="Size.Small"
                              Color="Color.Warning"
                              Icon="@Icons.Material.Filled.DeleteForever"
                              Label="Delete"
                              class="ma-2"
                              OnClick="@(() => DeleteRootCertificate(context))"
                              Disabled="@_rootCertificateRowIsInEditMode" />
                  }
              </MudTd>
          </RowTemplate>
          <RowEditingTemplate>
              <MudTd DataLabel="Enabled">
                  <MudSwitch @bind-Value = "@context.Enabled" Color="Color.Primary" />
              </MudTd>
              <MudTd DataLabel="Thumbprint">@context.Thumbprint</MudTd>
              <MudTd DataLable="Certificate">

                  @if (context.Certificate != null)
                  {
                      <MudText>
                          @context.Certificate?.GetNameInfo(X509NameType.SimpleName, false)
                      </MudText>
                  }
              </MudTd>
          </RowEditingTemplate>
          <PagerContent>
              <MudTablePager />
          </PagerContent>
      </MudTable>
      
  @if (_rootFormActive && RootCertificateRowInEdit != null)
  {
      <MudCard>
        <MudForm Model="@RootCertificateRowInEdit" @ref="@_rootCertForm" ValidationDelay="0" >
            <MudCardContent>
                <MudTextField Label="Subject (X.500)" @bind-Value="RootCertificateRowInEdit.Name" For="@(() => RootCertificateRowInEdit.Name)"/>
              <MudSwitch @bind-Value="RootCertificateRowInEdit.Enabled" For="@(() => RootCertificateRowInEdit.Enabled)" />
                <MudDatePicker Label="Begin Date" Editable="true"
                             Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Placeholder="en-US Date"
                             @bind-Date="RootCertificateRowInEdit.BeginDate"/>
                <MudDatePicker Label="End Date" Editable="true"
                               Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Placeholder="en-US Date"
                               @bind-Date="RootCertificateRowInEdit.EndDate"/>
                <MudTextField Label="Published Certificate Url" @bind-Value="RootCertificateRowInEdit.Url"></MudTextField>
                <MudTextField Label="Password" @bind-Value="RootCertificateRowInEdit.Secret"></MudTextField>
            </MudCardContent>
  
        </MudForm>
          <MudCardActions>
              <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto"
                         OnClick="@(async () => await Submit())">Generate Root CA</MudButton>
          </MudCardActions>
      </MudCard>
  }

  </ChildContent>
  <ErrorContent Context="ex">
    <pre class="blazor-error-boundary">
            @ex.Message
      </pre>
  </ErrorContent>
</ErrorBoundary>

<MudExpansionPanels Style="-webkit-flex: 1; -ms-flex: 1; -o-flex: 1; flex: 1;">
  <MudExpansionPanel Text="Show inline-edit event log">
        @foreach (var message in _editEvents)
        {
        <MudText>@message</MudText>
        }
        @if (_editEvents.Count > 0)
        {
        <div class="d-flex">
          <MudSpacer />
          <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="ClearEventLog">Clear event log</MudButton>
        </div>
        }
  </MudExpansionPanel>
</MudExpansionPanels>

