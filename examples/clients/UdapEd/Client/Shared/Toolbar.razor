@inject IJSRuntime JSRuntime
@inject RegisterService RegisterService


<MudAppBar Elevation="3" Style="background-image: linear-gradient( 109.6deg,  rgba(240,240,240,1) 11.2%, rgba(240,240,240,1) 91.1% );">
  <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start"
                 OnClick="@DrawerToggle" />
  
  <MudSpacer />
  <MudText Color="Color.Primary">Token Status:</MudText>&nbsp;<MudText Color="@(AppState.Status is {IsValid: false } ? Color.Error : Color.Success)">@AppState.Status.StatusMessage</MudText>
        <MudImage Class="cursor-pointer mud-ripple ma-2" Src="images/hl7/icon-fhir-32.png" Alt="Fhir Icon" style="height: 36px; width: 36px; margin: 24px"
            @onclick="@GoToIG" />
  <MudImage Class="cursor-pointer mud-ripple" src="images/udap/UDAP Ecosystem Gears.png" Alt="UDAP Icon" style="height: 36px; width: 36px; margin: 24px"
             @onclick="@GoToUdapOrg" />
  <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Dark"
                 Link="https://github.com/udap-tools/udap-dotnet/" Target="_blank" />
  @* <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Dark" Edge="Edge.End" /> *@
</MudAppBar>

<MudDrawer @bind-Open="_drawerOpen" Elevation="2">
  <MudDrawerHeader>
    <MudTooltip Placement="Placement.End" Style="padding-top: 30px">
      <ChildContent>
          <MudText Typo="Typo.h5">UdapEd</MudText>
                <MudText Typo="Typo.body2">version @Assembly.GetExecutingAssembly().GetName().Version.ToString()</MudText>
      </ChildContent>
      <TooltipContent>
          <MudText Typo="Typo.h6">UDAP Education Tool</MudText>
          <MudText Typo="Typo.caption">A UDAP client diagnostics tool</MudText>
          <MudIcon Icon="@Icons.Material.Filled.CastForEducation" />
      </TooltipContent>
    </MudTooltip>
  </MudDrawerHeader>
  <MudDivider Style="-o-flex-grow: 0; -webkit-flex-grow: 0; flex-grow: 0;" />
  <NavMenu />
</MudDrawer>


@code {
    
    [CascadingParameter]
    public CascadingAppState AppState { get; set; } = null!;
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task GoToIG()
    {
        await JSRuntime.InvokeVoidAsync("open", "http://hl7.org/fhir/us/udap-security/", "_blank");
    }

    async Task GoToUdapOrg()
    {
        await JSRuntime.InvokeVoidAsync("open", "http://udap.org/", "_blank");
    }
}
