CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'udap') THEN
        CREATE SCHEMA udap;
    END IF;
END $EF$;

CREATE TABLE udap.data_protection_keys (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    friendly_name text,
    xml text,
    CONSTRAINT pk_data_protection_keys PRIMARY KEY (id)
);

CREATE TABLE udap.tiered_clients (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    client_name text NOT NULL,
    client_id text NOT NULL,
    id_pbase_url text NOT NULL,
    redirect_uri text NOT NULL,
    client_uri_san text NOT NULL,
    community_id integer NOT NULL,
    enabled boolean NOT NULL,
    token_endpoint text NOT NULL,
    CONSTRAINT pk_tiered_clients PRIMARY KEY (id)
);

CREATE TABLE udap.udap_communities (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(200) NOT NULL,
    enabled boolean NOT NULL,
    "default" boolean NOT NULL,
    CONSTRAINT pk_udap_communities PRIMARY KEY (id)
);

CREATE TABLE udap.udap_anchors (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    enabled boolean NOT NULL,
    name text NOT NULL,
    x509_certificate text NOT NULL,
    thumbprint text NOT NULL,
    begin_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    community_id integer NOT NULL,
    CONSTRAINT pk_udap_anchors PRIMARY KEY (id),
    CONSTRAINT fk_anchor_communities FOREIGN KEY (community_id) REFERENCES udap.udap_communities (id) ON DELETE CASCADE
);

CREATE TABLE udap.udap_certifications (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(200) NOT NULL,
    community_id integer,
    CONSTRAINT pk_udap_certifications PRIMARY KEY (id),
    CONSTRAINT fk_udap_certifications_udap_communities_community_id FOREIGN KEY (community_id) REFERENCES udap.udap_communities (id)
);

CREATE TABLE udap.udap_intermediate_certificates (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    anchor_id integer NOT NULL,
    enabled boolean NOT NULL,
    name text NOT NULL,
    x509_certificate text NOT NULL,
    thumbprint text NOT NULL,
    begin_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NOT NULL,
    CONSTRAINT pk_udap_intermediate_certificates PRIMARY KEY (id),
    CONSTRAINT fk_intermediate_certificate_anchor FOREIGN KEY (anchor_id) REFERENCES udap.udap_anchors (id) ON DELETE CASCADE
);

CREATE TABLE udap.udap_anchor_certification (
    anchor_id integer NOT NULL,
    certification_id integer NOT NULL,
    CONSTRAINT pk_udap_anchor_certification PRIMARY KEY (anchor_id, certification_id),
    CONSTRAINT fk_anchor_certification_anchor FOREIGN KEY (anchor_id) REFERENCES udap.udap_anchors (id) ON DELETE CASCADE,
    CONSTRAINT fk_anchor_certification_certification FOREIGN KEY (certification_id) REFERENCES udap.udap_certifications (id) ON DELETE CASCADE
);

CREATE TABLE udap.udap_community_certification (
    community_id integer NOT NULL,
    certification_id integer NOT NULL,
    CONSTRAINT pk_udap_community_certification PRIMARY KEY (community_id, certification_id),
    CONSTRAINT fk_community_certification_certification FOREIGN KEY (certification_id) REFERENCES udap.udap_certifications (id) ON DELETE CASCADE,
    CONSTRAINT fk_community_certification_community FOREIGN KEY (community_id) REFERENCES udap.udap_communities (id)
);

CREATE INDEX ix_udap_anchor_certification_certification_id ON udap.udap_anchor_certification (certification_id);

CREATE INDEX ix_udap_anchors_community_id ON udap.udap_anchors (community_id);

CREATE INDEX ix_udap_certifications_community_id ON udap.udap_certifications (community_id);

CREATE INDEX ix_udap_community_certification_certification_id ON udap.udap_community_certification (certification_id);

CREATE INDEX ix_udap_intermediate_certificates_anchor_id ON udap.udap_intermediate_certificates (anchor_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240405193043_UdapDb_Initial', '8.0.3');

COMMIT;

